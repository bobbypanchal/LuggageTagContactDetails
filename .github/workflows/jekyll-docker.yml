name: Send Webhook Payload via Email

on:
  workflow_dispatch:
  repository_dispatch:
    types:
      - webhook-event

jobs:
  process-and-email:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Extract payload
        id: extract-payload
        run: |
          echo "::set-output name=payload::${{ github.event.client_payload }}"

      - name: Send email with formatted table
        env:
          ICLOUD_EMAIL: ${{ secrets.ICLOUD_EMAIL }}
          ICLOUD_PASSWORD: ${{ secrets.ICLOUD_PASSWORD }}
        run: |
          python <<EOF
          import smtplib
          from email.mime.text import MIMEText
          from email.mime.multipart import MIMEMultipart
          import json

          sender = "${{ secrets.ICLOUD_EMAIL }}"
          password = "${{ secrets.ICLOUD_PASSWORD }}"
          recipient = "${{ secret.ICLOUD_EMAIL }}"
          subject = "A Luggage tag was scanned"

          payload = json.loads('''${{ toJson(github.event.client_payload) }}''')

          # Convert payload to HTML table
          table_rows = "".join(
              f"<tr><td>{key}</td><td>{value}</td></tr>"
              for key, value in payload.items()
          )
          html_body = f"""
          <html>
              <body>
                  <p>Here is the received payload formatted as a table:</p>
                  <table border="1" style="border-collapse: collapse; width: 100%;">
                      <thead>
                          <tr>
                              <th>Key</th>
                              <th>Value</th>
                          </tr>
                      </thead>
                      <tbody>
                          {table_rows}
                      </tbody>
                  </table>
              </body>
          </html>
          """

          msg = MIMEMultipart("alternative")
          msg["Subject"] = subject
          msg["From"] = sender
          msg["To"] = recipient
          msg.attach(MIMEText(html_body, "html"))

          try:
              with smtplib.SMTP("smtp.mail.me.com", 587) as server:
                  server.starttls()
                  server.login(sender, password)
                  server.sendmail(sender, recipient, msg.as_string())
                  print("Email sent successfully!")
          except Exception as e:
              print(f"Failed to send email: {e}")
          EOF
